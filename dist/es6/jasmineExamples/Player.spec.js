import { Player } from './Player';
import { Song } from './Song';
describe('Player', function () {
    var player;
    var song;
    beforeEach(function () {
        player = new Player();
        song = new Song();
    });
    it('should be able to play a Song', function () {
        player.play(song);
        expect(player.currentlyPlayingSong).toEqual(song);
        expect(player).toBePlaying(song);
    });
    describe('when song has been paused', function () {
        beforeEach(function () {
            player.play(song);
            player.pause();
        });
        it('should indicate that the song is currently paused', function () {
            expect(player.isPlaying).toBeFalsy();
            expect(player).not.toBePlaying(song);
        });
        it('should be possible to resume', function () {
            player.resume();
            expect(player.isPlaying).toBeTruthy();
            expect(player.currentlyPlayingSong).toEqual(song);
        });
    });
    it('tells the current song if the user has made it a favorite', function () {
        spyOn(song, 'persistFavoriteStatus');
        player.play(song);
        player.makeFavorite();
        expect(song.persistFavoriteStatus).toHaveBeenCalledWith(true);
    });
    describe('#resume', function () {
        it('should throw an exception if song is already playing', function () {
            player.play(song);
            expect(function () {
                player.resume();
            }).toThrowError('song is already playing');
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImphc21pbmVFeGFtcGxlcy9QbGF5ZXIuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsUUFBUSxDQUFDLFFBQVEsRUFBRTtJQUNqQixJQUFJLE1BQU0sQ0FBQztJQUNYLElBQUksSUFBSSxDQUFDO0lBRVQsVUFBVSxDQUFDO1FBQ1QsTUFBTSxHQUFHLElBQUksTUFBTSxFQUFFLENBQUM7UUFDdEIsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7SUFFcEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsK0JBQStCLEVBQUU7UUFDbEMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBR2xELE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsMkJBQTJCLEVBQUU7UUFDcEMsVUFBVSxDQUFDO1lBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQixNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsbURBQW1ELEVBQUU7WUFDdEQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUdyQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtZQUNqQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDaEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUN0QyxNQUFNLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFHSCxFQUFFLENBQUMsMkRBQTJELEVBQUU7UUFDOUQsS0FBSyxDQUFDLElBQUksRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBRXJDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRXRCLE1BQU0sQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRSxDQUFDLENBQUMsQ0FBQztJQUdILFFBQVEsQ0FBQyxTQUFTLEVBQUU7UUFDbEIsRUFBRSxDQUFDLHNEQUFzRCxFQUFFO1lBQ3pELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFbEIsTUFBTSxDQUFDO2dCQUNMLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNsQixDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMseUJBQXlCLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiamFzbWluZUV4YW1wbGVzL1BsYXllci5zcGVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD0nLi4vLi4vdG9vbHMvbWFudWFsX3R5cGluZ3MvcHJvamVjdC9qYXNtaW5lLmQudHMnIC8+XG5cbmltcG9ydCB7IFBsYXllciB9IGZyb20gJy4vUGxheWVyJztcbmltcG9ydCB7IFNvbmcgfSBmcm9tICcuL1NvbmcnO1xuXG5kZXNjcmliZSgnUGxheWVyJywgZnVuY3Rpb24oKSB7XG4gIGxldCBwbGF5ZXI7XG4gIGxldCBzb25nO1xuXG4gIGJlZm9yZUVhY2goZnVuY3Rpb24oKSB7XG4gICAgcGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgIHNvbmcgPSBuZXcgU29uZygpO1xuXG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgYmUgYWJsZSB0byBwbGF5IGEgU29uZycsIGZ1bmN0aW9uKCkge1xuICAgIHBsYXllci5wbGF5KHNvbmcpO1xuICAgIGV4cGVjdChwbGF5ZXIuY3VycmVudGx5UGxheWluZ1NvbmcpLnRvRXF1YWwoc29uZyk7XG5cbiAgICAvL2RlbW9uc3RyYXRlcyB1c2Ugb2YgY3VzdG9tIG1hdGNoZXJcbiAgICBleHBlY3QocGxheWVyKS50b0JlUGxheWluZyhzb25nKTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ3doZW4gc29uZyBoYXMgYmVlbiBwYXVzZWQnLCBmdW5jdGlvbigpIHtcbiAgICBiZWZvcmVFYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgcGxheWVyLnBsYXkoc29uZyk7XG4gICAgICBwbGF5ZXIucGF1c2UoKTtcbiAgICB9KTtcblxuICAgIGl0KCdzaG91bGQgaW5kaWNhdGUgdGhhdCB0aGUgc29uZyBpcyBjdXJyZW50bHkgcGF1c2VkJywgZnVuY3Rpb24oKSB7XG4gICAgICBleHBlY3QocGxheWVyLmlzUGxheWluZykudG9CZUZhbHN5KCk7XG5cbiAgICAgIC8vIGRlbW9uc3RyYXRlcyB1c2Ugb2YgJ25vdCcgd2l0aCBhIGN1c3RvbSBtYXRjaGVyXG4gICAgICBleHBlY3QocGxheWVyKS5ub3QudG9CZVBsYXlpbmcoc29uZyk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGJlIHBvc3NpYmxlIHRvIHJlc3VtZScsIGZ1bmN0aW9uKCkge1xuICAgICAgcGxheWVyLnJlc3VtZSgpO1xuICAgICAgZXhwZWN0KHBsYXllci5pc1BsYXlpbmcpLnRvQmVUcnV0aHkoKTtcbiAgICAgIGV4cGVjdChwbGF5ZXIuY3VycmVudGx5UGxheWluZ1NvbmcpLnRvRXF1YWwoc29uZyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vIGRlbW9uc3RyYXRlcyB1c2Ugb2Ygc3BpZXMgdG8gaW50ZXJjZXB0IGFuZCB0ZXN0IG1ldGhvZCBjYWxsc1xuICBpdCgndGVsbHMgdGhlIGN1cnJlbnQgc29uZyBpZiB0aGUgdXNlciBoYXMgbWFkZSBpdCBhIGZhdm9yaXRlJywgZnVuY3Rpb24oKSB7XG4gICAgc3B5T24oc29uZywgJ3BlcnNpc3RGYXZvcml0ZVN0YXR1cycpO1xuXG4gICAgcGxheWVyLnBsYXkoc29uZyk7XG4gICAgcGxheWVyLm1ha2VGYXZvcml0ZSgpO1xuXG4gICAgZXhwZWN0KHNvbmcucGVyc2lzdEZhdm9yaXRlU3RhdHVzKS50b0hhdmVCZWVuQ2FsbGVkV2l0aCh0cnVlKTtcbiAgfSk7XG5cbiAgLy9kZW1vbnN0cmF0ZXMgdXNlIG9mIGV4cGVjdGVkIGV4Y2VwdGlvbnNcbiAgZGVzY3JpYmUoJyNyZXN1bWUnLCBmdW5jdGlvbigpIHtcbiAgICBpdCgnc2hvdWxkIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBzb25nIGlzIGFscmVhZHkgcGxheWluZycsIGZ1bmN0aW9uKCkge1xuICAgICAgcGxheWVyLnBsYXkoc29uZyk7XG5cbiAgICAgIGV4cGVjdChmdW5jdGlvbigpIHtcbiAgICAgICAgcGxheWVyLnJlc3VtZSgpO1xuICAgICAgfSkudG9UaHJvd0Vycm9yKCdzb25nIGlzIGFscmVhZHkgcGxheWluZycpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19
