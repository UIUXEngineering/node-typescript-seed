import { Player } from './Player';
import { Song } from './Song';
describe('Player', function () {
    var player;
    var song;
    beforeEach(function () {
        player = new Player();
        song = new Song();
    });
    it('should be able to play a Song', function () {
        player.play(song);
        expect(player.currentlyPlayingSong).toEqual(song);
        expect(player).toBePlaying(song);
    });
    describe('when song has been paused', function () {
        beforeEach(function () {
            player.play(song);
            player.pause();
        });
        it('should indicate that the song is currently paused', function () {
            expect(player.isPlaying).toBeFalsy();
            expect(player).not.toBePlaying(song);
        });
        it('should be possible to resume', function () {
            player.resume();
            expect(player.isPlaying).toBeTruthy();
            expect(player.currentlyPlayingSong).toEqual(song);
        });
    });
    it('tells the current song if the user has made it a favorite', function () {
        spyOn(song, 'persistFavoriteStatus');
        player.play(song);
        player.makeFavorite();
        expect(song.persistFavoriteStatus).toHaveBeenCalledWith(true);
    });
    describe('#resume', function () {
        it('should throw an exception if song is already playing', function () {
            player.play(song);
            expect(function () {
                player.resume();
            }).toThrowError('song is already playing');
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImphc21pbmVFeGFtcGxlcy9QbGF5ZXIuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2xDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFOUIsUUFBUSxDQUFDLFFBQVEsRUFBRTtJQUNqQixJQUFJLE1BQU0sQ0FBQztJQUNYLElBQUksSUFBSSxDQUFDO0lBRVQsVUFBVSxDQUFDO1FBQ1QsTUFBTSxHQUFHLElBQUksTUFBTSxFQUFFLENBQUM7UUFDdEIsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsK0JBQStCLEVBQUU7UUFDbEMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBR2xELE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsMkJBQTJCLEVBQUU7UUFDcEMsVUFBVSxDQUFDO1lBQ1QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQixNQUFNLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsbURBQW1ELEVBQUU7WUFDdEQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUdyQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztRQUVILEVBQUUsQ0FBQyw4QkFBOEIsRUFBRTtZQUNqQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDaEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUN0QyxNQUFNLENBQUMsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFHSCxFQUFFLENBQUMsMkRBQTJELEVBQUU7UUFDOUQsS0FBSyxDQUFDLElBQUksRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBRXJDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEIsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBRXRCLE1BQU0sQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoRSxDQUFDLENBQUMsQ0FBQztJQUdILFFBQVEsQ0FBQyxTQUFTLEVBQUU7UUFDbEIsRUFBRSxDQUFDLHNEQUFzRCxFQUFFO1lBQ3pELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFbEIsTUFBTSxDQUFDO2dCQUNMLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUNsQixDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMseUJBQXlCLENBQUMsQ0FBQztRQUM3QyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoiamFzbWluZUV4YW1wbGVzL1BsYXllci5zcGVjLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD0nLi4vLi4vdG9vbHMvbWFudWFsX3R5cGluZ3MvcHJvamVjdC9qYXNtaW5lLmQudHMnIC8+XG5cbmltcG9ydCB7IFBsYXllciB9IGZyb20gJy4vUGxheWVyJztcbmltcG9ydCB7IFNvbmcgfSBmcm9tICcuL1NvbmcnO1xuXG5kZXNjcmliZSgnUGxheWVyJywgZnVuY3Rpb24oKSB7XG4gIGxldCBwbGF5ZXI7XG4gIGxldCBzb25nO1xuXG4gIGJlZm9yZUVhY2goZnVuY3Rpb24oKSB7XG4gICAgcGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgIHNvbmcgPSBuZXcgU29uZygpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGJlIGFibGUgdG8gcGxheSBhIFNvbmcnLCBmdW5jdGlvbigpIHtcbiAgICBwbGF5ZXIucGxheShzb25nKTtcbiAgICBleHBlY3QocGxheWVyLmN1cnJlbnRseVBsYXlpbmdTb25nKS50b0VxdWFsKHNvbmcpO1xuXG4gICAgLy9kZW1vbnN0cmF0ZXMgdXNlIG9mIGN1c3RvbSBtYXRjaGVyXG4gICAgZXhwZWN0KHBsYXllcikudG9CZVBsYXlpbmcoc29uZyk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCd3aGVuIHNvbmcgaGFzIGJlZW4gcGF1c2VkJywgZnVuY3Rpb24oKSB7XG4gICAgYmVmb3JlRWFjaChmdW5jdGlvbigpIHtcbiAgICAgIHBsYXllci5wbGF5KHNvbmcpO1xuICAgICAgcGxheWVyLnBhdXNlKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIGluZGljYXRlIHRoYXQgdGhlIHNvbmcgaXMgY3VycmVudGx5IHBhdXNlZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgZXhwZWN0KHBsYXllci5pc1BsYXlpbmcpLnRvQmVGYWxzeSgpO1xuXG4gICAgICAvLyBkZW1vbnN0cmF0ZXMgdXNlIG9mICdub3QnIHdpdGggYSBjdXN0b20gbWF0Y2hlclxuICAgICAgZXhwZWN0KHBsYXllcikubm90LnRvQmVQbGF5aW5nKHNvbmcpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBiZSBwb3NzaWJsZSB0byByZXN1bWUnLCBmdW5jdGlvbigpIHtcbiAgICAgIHBsYXllci5yZXN1bWUoKTtcbiAgICAgIGV4cGVjdChwbGF5ZXIuaXNQbGF5aW5nKS50b0JlVHJ1dGh5KCk7XG4gICAgICBleHBlY3QocGxheWVyLmN1cnJlbnRseVBsYXlpbmdTb25nKS50b0VxdWFsKHNvbmcpO1xuICAgIH0pO1xuICB9KTtcblxuICAvLyBkZW1vbnN0cmF0ZXMgdXNlIG9mIHNwaWVzIHRvIGludGVyY2VwdCBhbmQgdGVzdCBtZXRob2QgY2FsbHNcbiAgaXQoJ3RlbGxzIHRoZSBjdXJyZW50IHNvbmcgaWYgdGhlIHVzZXIgaGFzIG1hZGUgaXQgYSBmYXZvcml0ZScsIGZ1bmN0aW9uKCkge1xuICAgIHNweU9uKHNvbmcsICdwZXJzaXN0RmF2b3JpdGVTdGF0dXMnKTtcblxuICAgIHBsYXllci5wbGF5KHNvbmcpO1xuICAgIHBsYXllci5tYWtlRmF2b3JpdGUoKTtcblxuICAgIGV4cGVjdChzb25nLnBlcnNpc3RGYXZvcml0ZVN0YXR1cykudG9IYXZlQmVlbkNhbGxlZFdpdGgodHJ1ZSk7XG4gIH0pO1xuXG4gIC8vZGVtb25zdHJhdGVzIHVzZSBvZiBleHBlY3RlZCBleGNlcHRpb25zXG4gIGRlc2NyaWJlKCcjcmVzdW1lJywgZnVuY3Rpb24oKSB7XG4gICAgaXQoJ3Nob3VsZCB0aHJvdyBhbiBleGNlcHRpb24gaWYgc29uZyBpcyBhbHJlYWR5IHBsYXlpbmcnLCBmdW5jdGlvbigpIHtcbiAgICAgIHBsYXllci5wbGF5KHNvbmcpO1xuXG4gICAgICBleHBlY3QoZnVuY3Rpb24oKSB7XG4gICAgICAgIHBsYXllci5yZXN1bWUoKTtcbiAgICAgIH0pLnRvVGhyb3dFcnJvcignc29uZyBpcyBhbHJlYWR5IHBsYXlpbmcnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==
